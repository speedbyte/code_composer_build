TMS470 C/C++ CODE GENERATION TOOLS

Release 4.1.4 April 2006



================================================================================

1.  New Utility ofd470

================================================================================

The object file display utility, ofd470 is used to print the contents of object

files (.obj), executable files (.out), and/or archive libraries (.lib) in both

human readable and XML formats.



The following command invokes the object file display utility:



   ofd470 [-options] <input filename> [ <input filename> ... ]



<input filename> is a COFF object file (.obj), an executable file (.out), or an

archive library (.lib).



If ofd470 is invoked without any options, it will display information about the

contents of the input files on the console screen. The following options can be

used to modify program behavior:



  -g        Append DWARF debug information to program output.

  -x        Display output in XML format.

  -o <file> Program output will be sent to <file> rather than to the screen.





Following is a table that describes that XML tags that are generated by ofd470:



Tag Name         Context                Description



<addr>           <line entry>           PC address

                 <row>                  PC address

                 <value>                Machine address

<addr class>     <value>                Address class

<addr size>      <compile unit>         Size of one machine address (octets)

                 <section>              Size of one machine address (octets)

<alignment>      <section>              Alignment factor

<archive>        <ofd>                  Archive file (.lib)

<attribute>      <die>                  Attribute of a DWARF DIE

<aux count>      <symbol>               Number of auxiliary entries for this

                                          symbol

<banner>         <ofd>                  Tool name and version information

<block>          <section>              True if alignment is used as blocking

                                          factor

                 <value>                Data block

<bss>            <section>              True if this section contains

                                          uninitialized data

<bss size>       <optional file header> Size of uninitialized data

<byte swapped>   <file header>          Endianness of build host is opposite

                                          of current host

<clink>          <section>              True if this section is conditionally

                                          linked

<column>         <line entry>           Source column number

<compile unit>   <section>              Compile unit

<const>          <value>                Constant

<copy>           <section>              True if this section is a copy section

<copyright>      <ofd>                  Copyright notice

<cpu flags>      <file header>          CPU flags

<data>           <section>              True if this section contains

                                          initialized data

<data size>      <optional file header> Size of initialized data

<data start>     <optional file header> Beginning address of initialized data

<destination>    <register>             Destination register

<die>            <compile unit>         DWARF debugging information entry (DIE)

<dim bound>      <dimension>            Dimension upper-bound

<dim num>        <dimension>            Dimension number

<dimension>      <symbol>               Array dimension

<disp>           <reloc entry>          Extra address encoding information

<dummy>          <section>              True if this section is a dummy section

<dwarf>          <ti coff>              DWARF information

<endian>         <file header>          Endianness of target machine

<entry point>    <optional file header> Entry point of executable program

<exec>           <file header>          True if this file is executable

<fde>            <section>              DWARF frame description entry (FDE)

<field size>     <reloc entry>          Size of the field to relocate

<file header>    <ti coff>              COFF file header

<file length>    <file header>          Size of this file

<file name>      <line entry>           Name of source file

                 <symbol>               Name of source file

<file offsets>   <section>              File offsets associated with section

<flag>           <value>                Flag

<form>           <attribute>            Attribute form

<frame size>     <symbol>               Size of function frame

<function>       <line numbers>         Line number entries for one function

<icode>          <section>              True if this section has I-Code

                                          associated with it

<index>          <symbol>               Index of symbol in the symbol table

<indirect register> <memory>            Indirect register used for calculating

                                          destination address

<initial location> <fde>                Start of function referred to by the

                                          FDE

<internal>       <reloc entry>          True if this relocation is internal

<kind>           <symbol>               Kind of symbol (defined, undefined,

                                          absolute, symbolic debug)

<length>         <symbol>               Length of section

<line>           <line entry>           Source line number

                 <symbol>               First source line associated with this

                                          symbol

<line count>     <section>              Number of line number entries

                 <symbol>               Number of line number entries

<line entry>     <compile unit>         Line number entry

                 <line numbers>         Line number entry

<line numbers>   <section>              Line number entries

<line ptr>       <file offsets>         File offset of line number entries

                 <symbol>               File offset of line number entries

<lnno strip>     <file header>          True if line numbers were stripped

                                          from this file

<localsym strip> <file header>          True if local symbols were stripped

                                          from this file

<magic>          <optional file header> Optional file header magic number

<math relative>  <reloc entry>          True if this relocation is math relative

<memory>         <row>                  SOE register is saved to memory

<name>           <fde>                  Name of function referred to by the FDE

                 <function>             Name of the current function

                 <ofd>                  Name of an object or archive Åle

                 <section>              Name of this section

                 <symbol>               Name of this symbol

<next symbol>    <symbol>               Index of next symbol after mutlisymbol

                                          entity

<noload>         <section>              True if section is a no-load section

<object file>    <ofd>                  Object file (.obj, .out)

<ofd>                                   Object file display (OFD) document

<offset>         <memory>               Offset of destination address from

                                          indirect register

                 <reloc entry>          Offset of the field from relocatable

                                          address

<optional file header> <ti coff>        Optional file header

<padded>         <section>              True if this section has been padded

<page>           <section>              Memory page

<pass>           <section>              True if this section is passed through

                                          unchanged

<physical addr>  <section>              Physical (run) address of section

<raw data ptr>   <file offsets>         File offset of raw data

<raw data size>  <section>              Size of raw data (octets)

<ref>            <value>                Reference

<register>       <row>                  SOE register is saved to register

<register mask>  <symbol>               Mask of saved SOE registers

<regular>        <section>              True if section is a regular section

<reloc count>    <section>              Number of relocation entries

                 <symbol>               Number of relocation entries

<reloc entry>    <relocations>          Relocation entry

<reloc ptr>      <file offsets>         File offset of relocation entries

<reloc strip>    <file header>          True if relocation information was

                                          stripped from this file

<relocations>    <section>              Relocation entries

<return address register> <fde>         Register used to pass the return address

                                          of this function

<row>            <table>                Table row

<section>        <dwarf>                DWARF section

                 <symbol>               Section containing the definition of

                                          this symbol

                 <ti coff>              COFF section

<section count>  <file header>          Number of section headers

<size in addrs>  <symbol>               Number of machine-address-sized

                                          units in function

<size in bits>   <symbol>               Size of symbol (bits)

<source>         <memory>               Source register

                 <register>             Source register

<start symbol>   <symbol>               First symbol in multi-symbol entity

<storage class>  <symbol>               Storage class of this symbol

<storage type>   <symbol>               Storage type of this symbol

<string>         <string table>         String table entry

                 <value>                String

<string table>   <ti coff>              String table

<string table size> <string table>      Size of string table

<sym merge>      <file header>          True if debug type-symbols were merged

<symbol>         <symbol table>         Symbol table entry

<symbol count>   <file header>          Number of entries in the symbol table

<symbol relative> <reloc entry>         Relocation is relative to the specified

                                          symbol

<symbol table>   <ti coff>              Symbol table

<table>          <fde>                  FDE table

<tag>            <die>                  Tag name

<tag index>      <symbol>               Reference to user-defined type

<target id>      <file header>          Target ID; magic number identifying

                                          the target machine

<text>           <section>              True if this section contains code

<text size>      <optional file header> Size of executable code

<text start>     <optional file header> Beginning address of executable code

<ti coff>        <object file>          TI COFF file

<tool version>   <optional file header> Tool version stamp

<type>           <attribute>            Attribute type

                 <reloc entry>          Type of relocation

<type ref>       <value>                Type reference

<value>          <attribute>            Attribute value

                 <reloc entry>          Value

                 <symbol>               Value

<vector>         <section>              True if this section contains a vector

                                          table (C55x only)

<version>        <compile unit>         DWARF version

                 <file header>          Version ID; structure version of this

                                          COFF file

<virtual addr>   <reloc entry>          Virtual address to be relocated

                 <section>              Virtual (load) address of section

<word size>      <reloc entry>          Number of address-sized units containing

                                          the relocation field

<xml version>    <dwarf>                Version of the DWARF XML language

                 <ti coff>              Version of the COFF XML language



